{"ast":null,"code":"import _classCallCheck from\"/Users/vlrtyan/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/vlrtyan/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";export var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,token=_ref.token;_classCallCheck(this,Api);this.url=url;this.token=token;this.__getResponseData=this._getResponseData.bind(this);}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}},{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this.url,\"/users/me\"),{headers:{authorization:this.token}}).then(this.__getResponseData);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this.url,\"/cards/\"),{headers:{authorization:this.token}}).then(this.__getResponseData);}},{key:\"editUserData\",value:function editUserData(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this.url,\"/users/me\"),{method:'PATCH',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this.__getResponseData);}},{key:\"addNewItem\",value:function addNewItem(data){return fetch(\"\".concat(this.url,\"/cards\"),{method:'POST',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this.__getResponseData);}},{key:\"deleteCard\",value:function deleteCard(data){return fetch(\"\".concat(this.url,\"/cards/\").concat(data._id),{method:'DELETE',headers:{authorization:this.token,'Content-Type':'application/json'}}).then(this.__getResponseData);}},{key:\"changeAvatar\",value:function changeAvatar(data){return fetch(\"\".concat(this.url,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this.token,'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this.__getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(data,isLiked){if(isLiked===true){return fetch(\"\".concat(this.url,\"/cards/\").concat(data._id,\"/likes\"),{method:'DELETE',headers:{authorization:this.token,'Content-Type':'application/json'}}).then(this.__getResponseData);}else{return fetch(\"\".concat(this.url,\"/cards/\").concat(data._id,\"/likes\"),{method:'PUT',headers:{authorization:this.token,'Content-Type':'application/json'}}).then(this.__getResponseData);}}}]);return Api;}();export var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-32',token:'f7e9f27f-efd9-4384-a381-5bfd59f30ca5'});","map":{"version":3,"sources":["/Users/vlrtyan/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","url","token","__getResponseData","_getResponseData","bind","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","name","about","method","body","JSON","stringify","data","link","_id","avatar","isLiked","api"],"mappings":"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","sourcesContent":["export class Api {\n    constructor({ url, token }) {\n        this.url = url;\n        this.token = token;\n        this.__getResponseData = this._getResponseData.bind(this);\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    getUserData() {\n        return fetch(`${this.url}/users/me`, {\n            headers: {\n                authorization: this.token\n            }\n        })\n            .then(this.__getResponseData);\n    }\n\n    getInitialCards() {\n        return fetch(`${this.url}/cards/`, {\n            headers: {\n                authorization: this.token\n            }\n        })\n            .then(this.__getResponseData);\n    }\n\n    editUserData({name, about}) {\n        return fetch(`${this.url}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        })\n            .then(this.__getResponseData);\n    }\n\n    addNewItem(data) {\n        return fetch(`${this.url}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this.__getResponseData);\n    }\n\n    deleteCard(data) {\n        return fetch(`${this.url}/cards/${data._id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(this.__getResponseData);\n    }\n\n    changeAvatar(data) {\n        return fetch(`${this.url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this.token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this.__getResponseData);\n    }\n\n    changeLikeCardStatus(data, isLiked) {\n        if (isLiked === true) {\n            return fetch(`${this.url}/cards/${data._id}/likes`, {\n                method: 'DELETE',\n                headers: {\n                    authorization: this.token,\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(this.__getResponseData);\n        } else {\n            return fetch(`${this.url}/cards/${data._id}/likes`, {\n                method: 'PUT',\n                headers: {\n                    authorization: this.token,\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(this.__getResponseData);\n        }\n    }\n\n}\n\nexport const api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-32',\n    token: 'f7e9f27f-efd9-4384-a381-5bfd59f30ca5'\n})"]},"metadata":{},"sourceType":"module"}