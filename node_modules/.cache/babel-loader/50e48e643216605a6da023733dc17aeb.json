{"ast":null,"code":"var _jsxFileName = \"/Users/vlrtyan/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Login from './Login.js';\nimport Register from './Register.js'; //import InfoTooltip from './InfoTooltip.js';\n\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport * as auth from '../auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({});\n  };\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      about\n    } = _ref;\n    api.editUserData({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateAvatar = _ref2 => {\n    let {\n      avatar\n    } = _ref2;\n    api.changeAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id); // отправить запрос в API и обновить данные карточки\n\n    api.changeLikeCardStatus(card, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  };\n\n  const handleCardDelete = card => {\n    api.deleteCard(card).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  };\n\n  const handleAddPlaceSubmit = newCard => {\n    api.addNewItem(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  React.useEffect(() => {\n    api.getUserData().then(userData => setCurrentUser(userData)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []); //регистрация и авторизация\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history]);\n\n  const handleLogin = formData => {\n    auth.authorize(formData.email, formData.password).then(data => {\n      localStorage.setItem('jwt', data.jwt);\n      setLoggedIn(true);\n      history.push('/');\n    }).catch(err => console.log(err));\n  }; // const handleRegistration = (formData) => {\n  //   if (formData.password === formData.confirmPassword) {\n  //     auth.register(formData.username, formData.password, formData.email, formData.calGoal)\n  //       .then((res) => {\n  //         navigate(\"/login\");\n  //       })\n  //       .catch(err => console.log(err));\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), \" element=\", /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 51\n          }, this), \" />\", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(Main, {\n              cards: cards,\n              onEditAvatar: handleEditAvatarClick,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qDn+8e8u94g9tEj8+BnshQICQE4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vlrtyan/dev/react-mesto-auth/src/components/App.js"],"names":["React","BrowserRouter","NavLink","Route","Switch","useHistory","ProtectedRoute","Header","Main","Footer","Login","Register","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","api","auth","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","loggedIn","setLoggedIn","history","currentUser","setCurrentUser","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","name","about","editUserData","then","res","catch","err","console","log","handleUpdateAvatar","avatar","changeAvatar","handleCardLike","isLiked","likes","some","like","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","addNewItem","useEffect","getUserData","userData","getInitialCards","push","handleLogin","formData","authorize","email","password","data","localStorage","setItem","jwt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute.js';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\n//import InfoTooltip from './InfoTooltip.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport * as auth from '../auth.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  }\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  }\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  }\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n  const handleUpdateUser = ({ name, about }) => {\n    api.editUserData({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n  const handleUpdateAvatar = ({ avatar }) => {\n    api.changeAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    // отправить запрос в API и обновить данные карточки\n    api.changeLikeCardStatus(card, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleCardDelete = (card) => {\n    api.deleteCard(card)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleAddPlaceSubmit = (newCard) => {\n    api.addNewItem(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n\n  }\n\n  React.useEffect(() => {\n    api.getUserData()\n      .then(userData => setCurrentUser(userData))\n      .catch(err => console.log(err))\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n\n//регистрация и авторизация\nReact.useEffect(()=>{\n  if (loggedIn){\n    history.push('/');\n  }\n}, [loggedIn, history])\n\nconst handleLogin = (formData) => {\n  auth.authorize(formData.email, formData.password)\n    .then((data) => {\n      localStorage.setItem('jwt', data.jwt);\n      setLoggedIn(true);\n      history.push('/');\n    })\n    .catch(err => console.log(err));\n}\n// const handleRegistration = (formData) => {\n//   if (formData.password === formData.confirmPassword) {\n//     auth.register(formData.username, formData.password, formData.email, formData.calGoal)\n//       .then((res) => {\n//         navigate(\"/login\");\n//       })\n//       .catch(err => console.log(err));\n//   }\n// }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <BrowserRouter>\n        <div className=\"page\">\n          <Header />\n          <Switch>\n          <Route path=\"/signin\"></Route> element={<Login handleLogin={handleLogin} />} /> \n          <Route path=\"/signup\">\n            <Register />\n          </Route>\n\n          <ProtectedRoute path=\"/\">\n            <Main\n              cards={cards}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n            <Footer />\n            </ProtectedRoute>\n            </Switch>\n\n\n          {/* попап редактирования профиля */}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          {/* попап редактирования аватара */}\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          {/* попап добавления карточки */}\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          {/* <InfoTooltip \n          isOpen=\"true\"\n          /> */}\n\n        </div>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n\n      </BrowserRouter>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}