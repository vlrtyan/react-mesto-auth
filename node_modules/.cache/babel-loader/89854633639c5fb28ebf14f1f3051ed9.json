{"ast":null,"code":"var _jsxFileName = \"/Users/vlrtyan/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Login from './Login.js';\nimport Register from './Register.js'; //import InfoTooltip from './InfoTooltip.js';\n\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport * as auth from '../auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n  console.log(history);\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({});\n  };\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      about\n    } = _ref;\n    api.editUserData({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateAvatar = _ref2 => {\n    let {\n      avatar\n    } = _ref2;\n    api.changeAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id); // отправить запрос в API и обновить данные карточки\n\n    api.changeLikeCardStatus(card, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  };\n\n  const handleCardDelete = card => {\n    api.deleteCard(card).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  };\n\n  const handleAddPlaceSubmit = newCard => {\n    api.addNewItem(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  React.useEffect(() => {\n    api.getUserData().then(userData => setCurrentUser(userData)).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }, []); //регистрация и авторизация\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history]);\n\n  const handleLogin = formData => {\n    auth.authorize(formData.email, formData.password).then(data => {\n      localStorage.setItem('jwt', data.jwt);\n      setLoggedIn(true);\n      history.push('/');\n    }).catch(err => console.log(err));\n  };\n\n  const handleRegistration = formData => {\n    auth.register(formData.email, formData.password).then(res => {\n      history.push('/sign-in');\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegistration: handleRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              cards: cards,\n              onEditAvatar: handleEditAvatarClick,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qDn+8e8u94g9tEj8+BnshQICQE4=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vlrtyan/dev/react-mesto-auth/src/components/App.js"],"names":["React","BrowserRouter","Route","Routes","useNavigate","ProtectedRoute","Header","Main","Footer","Login","Register","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","api","auth","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","loggedIn","setLoggedIn","history","useHistory","console","log","currentUser","setCurrentUser","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","name","about","editUserData","then","res","catch","err","handleUpdateAvatar","avatar","changeAvatar","handleCardLike","isLiked","likes","some","like","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","addNewItem","useEffect","getUserData","userData","getInitialCards","push","handleLogin","formData","authorize","email","password","data","localStorage","setItem","jwt","handleRegistration","register"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute.js';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\n//import InfoTooltip from './InfoTooltip.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport * as auth from '../auth.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n  console.log(history)\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  }\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  }\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  }\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n  const handleUpdateUser = ({ name, about }) => {\n    api.editUserData({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n  const handleUpdateAvatar = ({ avatar }) => {\n    api.changeAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    // отправить запрос в API и обновить данные карточки\n    api.changeLikeCardStatus(card, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleCardDelete = (card) => {\n    api.deleteCard(card)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleAddPlaceSubmit = (newCard) => {\n    api.addNewItem(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n\n  }\n\n  React.useEffect(() => {\n    api.getUserData()\n      .then(userData => setCurrentUser(userData))\n      .catch(err => console.log(err))\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n\n  //регистрация и авторизация\n  React.useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history])\n\n  const handleLogin = (formData) => {\n    auth.authorize(formData.email, formData.password)\n      .then((data) => {\n        localStorage.setItem('jwt', data.jwt);\n        setLoggedIn(true);\n        history.push('/');\n      })\n      .catch(err => console.log(err));\n  }\n  const handleRegistration = (formData) => {\n      auth.register(formData.email, formData.password)\n        .then((res) => {\n          history.push('/sign-in');\n        })\n        .catch(err => console.log(err));\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <BrowserRouter>\n        <div className=\"page\">\n          <Header />\n          <Routes>\n            <Route path=\"/sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Register handleRegistration={handleRegistration}/>\n            </Route>\n\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Main\n                cards={cards}\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n            </ProtectedRoute>\n          </Routes>\n          <Footer />\n\n\n          {/* попап редактирования профиля */}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          {/* попап редактирования аватара */}\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          {/* попап добавления карточки */}\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          {/* <InfoTooltip \n          isOpen=\"true\"\n          /> */}\n\n        </div>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n\n      </BrowserRouter>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}